AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Resources:
  ChangiLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: ChangiLayer
      Description: Lambda Layer for dependencies
      ContentUri: ./CHANGI_BACKEND/lambda-layer/
      CompatibleRuntimes:
        - python3.10

  AppLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.lambda_handler        # Lambda handler in app.py
      Runtime: python3.10                # Python runtime
      CodeUri: ./CHANGI_BACKEND          # Directory where the Lambda function code is located
      MemorySize: 128                    # Memory for Lambda
      Timeout: 30
      Environment:                       # Environment variables
        Variables:
          API_KEY: !Ref APIKey
          ASSISTANT_ID: !Ref AssistantID
          OPENAI_API_KEY: !Ref OpenAIKey
          OPENAI_API_URL: !Ref OpenAIURL
          VECTOR_ID: !Ref VectorID
          STAGE: !Ref StageName
      Layers:
      - Ref: ChangiLayer                 # Lambda Layer for dependencies
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref ChangiGateway   # Link to the API Gateway
            Path: /process-transcribed-text # API Gateway resource path
            Method: post                    # HTTP method (POST)
            RequestParameters:
              method.request.header.x-api-key: true  # Custom header to expect

  ChangiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref StageName            # Stage name (dev, staging, prod)
      DefinitionBody:
        swagger: "2.0"
        info:
          title: "Changi Gateway"
        paths:
          /process-transcribed-text:
            post:
              x-amazon-apigateway-integration:      # Integration between API Gateway and Lambda
                uri: !Sub
                  - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AppLambdaFunction.Arn}/invocations
                  - { "AWS::Region": { "Ref": "AWS::Region" } }
                httpMethod: POST
                type: aws_proxy
                passthroughBehavior: when_no_match
              parameters:
                - name: "x-api-key"
                  in: "header"
                  required: true
                  type: "string"
              responses:
                "200":
                  description: "Success"

Parameters:
  APIKey:
    Type: String
  AssistantID:
    Type: String
  OpenAIKey:
    Type: String
  OpenAIURL:
    Type: String
  VectorID:
    Type: String
  StageName:
    Type: String
    Default: prod
    AllowedValues:
      - dev
      - staging
      - prod
    Description: "Deployment stage (e.g., dev, staging, prod)"

Outputs:
  ApiUrl:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${ChangiGateway}.execute-api.${AWS::Region}.amazonaws.com/${StageName}/process-transcribed-text"
